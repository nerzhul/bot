image: golang:1.10

variables:
  REPO_NAME: gitlab.com/nerzhul/bot
  POSTGRES_DB: "unittests"
  POSTGRES_USER: "unittests"
  POSTGRES_PASSWORD: "unittests"
  SWAGGER_TAG: v3.13.0
  CONTAINER_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH

before_script:
  - go version
  - ./ci/before_script.sh
  - cd $GOPATH/src/$REPO_NAME

stages:
  - test
  - build
  - release
  - docker
  - documentation
  - deploy

.build_template: &build_template
  script:
    - make build

.docker_template: &docker_template
  stage: docker
  image: docker:stable
  services:
    - docker:dind
  only:
    - tags
    - feature/docker_release
  dependencies:
    - release
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - cp cmd/${BOT_BINARY}/Dockerfile .
    - docker build . -t $CONTAINER_IMAGE_$BOT_BINARY-$CPU_ARCH:$CI_COMMIT_REF_NAME -t $CONTAINER_IMAGE_$BOT_BINARY-$CPU_ARCH:latest
    - docker push $CONTAINER_IMAGE_$BOT_BINARY-$CPU_ARCH:$CI_COMMIT_REF_NAME
    - docker push $CONTAINER_IMAGE_$BOT_BINARY-$CPU_ARCH:latest
  tags:
    - arm64

test:unittests:
  stage: test
  services:
    - rabbitmq:latest
    - postgres:latest
  before_script:
    - apt-get update -qyy > /dev/null
    - apt-get install -qyy postgresql-client > /dev/null
    - ./ci/initdb.sh
    - ./ci/before_script.sh
    - cd $GOPATH/src/$REPO_NAME
  script:
    - make test

test:lint:
  stage: test
  script:
    - make lint

build:
  <<: *build_template
  stage: build
  artifacts:
    when: on_success
    expire_in: 1 day
    paths:
      - artifacts/bot

doc:coverage:
  stage: documentation
  services:
    - rabbitmq:latest
    - postgres:latest
  script:
    - apt-get update -qyy > /dev/null
    - apt-get install -qyy postgresql-client > /dev/null
    - ./ci/initdb.sh
    - ./ci/before_script.sh
    - cd $GOPATH/src/$REPO_NAME
    - ./ci/coverage.sh
  artifacts:
    when: on_success
    expire_in: 1 day
    paths:
      - artifacts/coverage.html

doc:swagger:
  <<: *build_template
  stage: documentation
  dependencies:
    - build
  script:
    - make swagger_doc
  artifacts:
    when: on_success
    paths:
      - artifacts/swagger.json

release:
  <<: *build_template
  stage: release
  only:
    - tags
  artifacts:
    when: on_success
    paths:
      - artifacts/*

docker:arm64:ircbot:
  <<: *docker_template
  variables:
    BOT_BINARY: ircbot
    CPU_ARCH: arm64

docker:arm64:matterbot:
  <<: *docker_template
  variables:
    BOT_BINARY: matterbot
    CPU_ARCH: arm64

pages:
  stage: deploy
  only:
    - master
  dependencies:
    - doc:swagger
    - doc:coverage
  script:
    # At the beginning we are in go package path, not in CI_PROJECT_DIR
    - mkdir -p $CI_PROJECT_DIR/public/swagger/
    - cp artifacts/coverage.html $CI_PROJECT_DIR/public/
    - cp artifacts/swagger.json $CI_PROJECT_DIR/public/swagger/
    - git clone https://github.com/swagger-api/swagger-ui.git $CI_PROJECT_DIR/swagger-ui -b ${SWAGGER_TAG}
    - cp -R $CI_PROJECT_DIR/swagger-ui/dist/* $CI_PROJECT_DIR/public/swagger/
    - sed -i 's/http:\/\/petstore.swagger.io\/v2\/swagger.json/https:\/\/nerzhul.gitlab.io\/bot\/swagger\/swagger.json/g' $CI_PROJECT_DIR/public/swagger/index.html
  artifacts:
    when: on_success
    expire_in: 10 year
    paths:
      - public
